#!/usr/bin/env python3
"""
üöÄ Check All Head to Head Data - July 17-18, 2025
‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• head to head ‡∏Ç‡∏≠‡∏á‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏π‡πà
"""

import json
import os
import glob

def check_h2h_file(file_path):
    """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• head to head ‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå"""
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            data = json.load(f)
        
        # ‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡∏°‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå
        filename = os.path.basename(file_path)
        team_ids = filename.replace('h2h_', '').replace('.json', '').split('_')
        
        # ‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡∏°‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        team1_name = None
        team2_name = None
        results = []
        
        for match in data['response']:
            if match['fixture']['status']['short'] == 'FT':  # ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏ö‡πÅ‡∏•‡πâ‡∏ß
                home_team = match['teams']['home']['name']
                away_team = match['teams']['away']['name']
                home_goals = match['goals']['home']
                away_goals = match['goals']['away']
                match_date = match['fixture']['date'][:10]
                
                if team1_name is None and match['teams']['home']['id'] == int(team_ids[0]):
                    team1_name = home_team
                elif team1_name is None and match['teams']['away']['id'] == int(team_ids[0]):
                    team1_name = away_team
                
                if team2_name is None and match['teams']['home']['id'] == int(team_ids[1]):
                    team2_name = home_team
                elif team2_name is None and match['teams']['away']['id'] == int(team_ids[1]):
                    team2_name = away_team
                
                results.append({
                    'home_team': home_team,
                    'away_team': away_team,
                    'home_goals': home_goals,
                    'away_goals': away_goals,
                    'match_date': match_date
                })
        
        return {
            'team1_id': team_ids[0],
            'team2_id': team_ids[1],
            'team1_name': team1_name,
            'team2_name': team2_name,
            'results': results
        }
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
        return None

def main():
    """‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å"""
    print("üöÄ Check All Head to Head Data - July 17-18, 2025")
    print("=" * 60)
    
    # ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå head to head ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    h2h_files = glob.glob("/Users/80090/Desktop/Project/untitle/api_data/uefa_real_data/h2h_*.json")
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• head to head ‡∏Ç‡∏≠‡∏á‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏π‡πà
    all_h2h_data = {}
    
    for file_path in h2h_files:
        h2h_data = check_h2h_file(file_path)
        if h2h_data and h2h_data['team1_name'] and h2h_data['team2_name']:
            key = f"{h2h_data['team1_name']} vs {h2h_data['team2_name']}"
            all_h2h_data[key] = h2h_data
    
    # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    print(f"‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• head to head ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {len(all_h2h_data)} ‡∏Ñ‡∏π‡πà")
    
    for key, h2h_data in all_h2h_data.items():
        print(f"\n{key}:")
        if h2h_data['results']:
            for result in h2h_data['results']:
                print(f"  {result['home_team']} {result['home_goals']} - {result['away_goals']} {result['away_team']} ({result['match_date']})")
        else:
            print("  ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏à‡∏≠‡∏Å‡∏±‡∏ô")
    
    # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• head to head ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    with open('all_head_to_head_data.json', 'w', encoding='utf-8') as f:
        json.dump(all_h2h_data, f, ensure_ascii=False, indent=2)
    
    print(f"\nüíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• head to head ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå: all_head_to_head_data.json")

if __name__ == "__main__":
    main()
