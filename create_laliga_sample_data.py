#!/usr/bin/env python3
"""
üá™üá∏ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• La Liga ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏£‡∏π‡∏õ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á
‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î (‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÑ‡∏î‡πâ API Key)
"""

import pandas as pd
import numpy as np
from datetime import datetime, timedelta
import random

def create_realistic_laliga_data():
    """‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• La Liga ‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á"""
    print("üá™üá∏ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• La Liga ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á...")
    
    # ‡∏ó‡∏µ‡∏°‡πÉ‡∏ô La Liga 2024-25 (‡∏à‡∏£‡∏¥‡∏á)
    teams_data = {
        'Real Madrid': {'strength': 2.3, 'home_bonus': 0.4, 'form': 0.9},
        'FC Barcelona': {'strength': 2.2, 'home_bonus': 0.4, 'form': 0.8},
        'Atletico Madrid': {'strength': 1.9, 'home_bonus': 0.3, 'form': 0.85},
        'Athletic Bilbao': {'strength': 1.6, 'home_bonus': 0.5, 'form': 0.75},
        'Real Sociedad': {'strength': 1.5, 'home_bonus': 0.3, 'form': 0.7},
        'Real Betis': {'strength': 1.4, 'home_bonus': 0.3, 'form': 0.72},
        'Villarreal CF': {'strength': 1.4, 'home_bonus': 0.2, 'form': 0.68},
        'Valencia CF': {'strength': 1.2, 'home_bonus': 0.3, 'form': 0.6},
        'Sevilla FC': {'strength': 1.3, 'home_bonus': 0.2, 'form': 0.65},
        'RC Celta': {'strength': 1.1, 'home_bonus': 0.2, 'form': 0.6},
        'CA Osasuna': {'strength': 1.0, 'home_bonus': 0.4, 'form': 0.7},
        'Getafe CF': {'strength': 0.9, 'home_bonus': 0.3, 'form': 0.55},
        'UD Las Palmas': {'strength': 0.9, 'home_bonus': 0.2, 'form': 0.5},
        'Girona FC': {'strength': 1.2, 'home_bonus': 0.2, 'form': 0.75},
        'Rayo Vallecano': {'strength': 1.0, 'home_bonus': 0.3, 'form': 0.6},
        'RCD Espanyol': {'strength': 0.8, 'home_bonus': 0.2, 'form': 0.45},
        'Deportivo Alaves': {'strength': 0.8, 'home_bonus': 0.2, 'form': 0.5},
        'Real Valladolid': {'strength': 0.7, 'home_bonus': 0.2, 'form': 0.4},
        'CD Leganes': {'strength': 0.7, 'home_bonus': 0.2, 'form': 0.45},
        'RCD Mallorca': {'strength': 0.9, 'home_bonus': 0.2, 'form': 0.55}
    }
    
    teams = list(teams_data.keys())
    matches = []
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• 300 ‡πÄ‡∏Å‡∏° (‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á‡∏à‡∏£‡∏¥‡∏á)
    print("‚öΩ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô...")
    
    for i in range(300):
        # ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡∏°
        home_team = random.choice(teams)
        away_team = random.choice([t for t in teams if t != home_team])
        
        # ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡∏°
        home_data = teams_data[home_team]
        away_data = teams_data[away_team]
        
        # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á
        home_strength = home_data['strength'] + home_data['home_bonus']
        away_strength = away_data['strength']
        
        # ‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏ü‡∏≠‡∏£‡πå‡∏°
        home_strength *= home_data['form']
        away_strength *= away_data['form']
        
        # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡πà‡∏°
        home_strength += random.uniform(-0.3, 0.3)
        away_strength += random.uniform(-0.3, 0.3)
        
        # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏õ‡∏£‡∏∞‡∏ï‡∏π
        home_goals = max(0, int(np.random.poisson(home_strength)))
        away_goals = max(0, int(np.random.poisson(away_strength)))
        
        # ‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏à‡∏£‡∏¥‡∏á (‡∏•‡∏î‡πÄ‡∏Å‡∏°‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡πÄ‡∏¢‡∏≠‡∏∞)
        if home_goals + away_goals > 5:
            if random.random() < 0.7:  # 70% ‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ï‡∏π
                home_goals = min(home_goals, 3)
                away_goals = min(away_goals, 2)
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà (‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á 4 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô)
        days_ago = random.randint(1, 120)
        match_date = datetime.now() - timedelta(days=days_ago)
        
        # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
        matchday = random.randint(1, 38)
        
        matches.append({
            'date': match_date.strftime('%Y-%m-%d'),
            'home_team': home_team,
            'away_team': away_team,
            'home_goals': home_goals,
            'away_goals': away_goals,
            'matchday': matchday,
            'season': 2024
        })
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á DataFrame
    df = pd.DataFrame(matches)
    df['date'] = pd.to_datetime(df['date'])
    df = df.sort_values('date').reset_index(drop=True)
    
    print(f"‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• La Liga ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {len(df)} ‡πÄ‡∏Å‡∏°")
    
    return df

def analyze_realistic_data(df):
    """‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô"""
    print(f"\nüìä ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• La Liga:")
    print("=" * 40)
    
    print(f"üìà ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏Å‡∏°: {len(df)}")
    print(f"üìÖ ‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤: {df['date'].min().strftime('%Y-%m-%d')} ‡∏ñ‡∏∂‡∏á {df['date'].max().strftime('%Y-%m-%d')}")
    
    # ‡∏ó‡∏µ‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    all_teams = set(df['home_team'].unique()) | set(df['away_team'].unique())
    print(f"üèÜ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡∏°: {len(all_teams)}")
    
    # ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏õ‡∏£‡∏∞‡∏ï‡∏π
    total_goals = df['home_goals'].sum() + df['away_goals'].sum()
    avg_goals = total_goals / len(df)
    print(f"‚öΩ ‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢: {avg_goals:.2f} ‡∏ï‡πà‡∏≠‡πÄ‡∏Å‡∏°")
    
    # ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô
    home_wins = len(df[df['home_goals'] > df['away_goals']])
    draws = len(df[df['home_goals'] == df['away_goals']])
    away_wins = len(df[df['home_goals'] < df['away_goals']])
    
    print(f"üè† ‡πÄ‡∏à‡πâ‡∏≤‡∏ö‡πâ‡∏≤‡∏ô‡∏ä‡∏ô‡∏∞: {home_wins} ({home_wins/len(df)*100:.1f}%)")
    print(f"ü§ù ‡πÄ‡∏™‡∏°‡∏≠: {draws} ({draws/len(df)*100:.1f}%)")
    print(f"‚úàÔ∏è ‡∏ó‡∏µ‡∏°‡πÄ‡∏¢‡∏∑‡∏≠‡∏ô‡∏ä‡∏ô‡∏∞: {away_wins} ({away_wins/len(df)*100:.1f}%)")
    
    # ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏ó‡∏µ‡∏°
    team_stats = {}
    for _, row in df.iterrows():
        # Home team
        if row['home_team'] not in team_stats:
            team_stats[row['home_team']] = {'games': 0, 'wins': 0, 'draws': 0, 'losses': 0, 'goals_for': 0, 'goals_against': 0}
        
        team_stats[row['home_team']]['games'] += 1
        team_stats[row['home_team']]['goals_for'] += row['home_goals']
        team_stats[row['home_team']]['goals_against'] += row['away_goals']
        
        if row['home_goals'] > row['away_goals']:
            team_stats[row['home_team']]['wins'] += 1
        elif row['home_goals'] == row['away_goals']:
            team_stats[row['home_team']]['draws'] += 1
        else:
            team_stats[row['home_team']]['losses'] += 1
        
        # Away team
        if row['away_team'] not in team_stats:
            team_stats[row['away_team']] = {'games': 0, 'wins': 0, 'draws': 0, 'losses': 0, 'goals_for': 0, 'goals_against': 0}
        
        team_stats[row['away_team']]['games'] += 1
        team_stats[row['away_team']]['goals_for'] += row['away_goals']
        team_stats[row['away_team']]['goals_against'] += row['home_goals']
        
        if row['away_goals'] > row['home_goals']:
            team_stats[row['away_team']]['wins'] += 1
        elif row['away_goals'] == row['home_goals']:
            team_stats[row['away_team']]['draws'] += 1
        else:
            team_stats[row['away_team']]['losses'] += 1
    
    # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
    for team in team_stats:
        team_stats[team]['points'] = (team_stats[team]['wins'] * 3 + team_stats[team]['draws'])
        team_stats[team]['ppg'] = team_stats[team]['points'] / max(1, team_stats[team]['games'])
    
    # Top 5 ‡∏ó‡∏µ‡∏°
    top_teams = sorted(team_stats.items(), key=lambda x: x[1]['points'], reverse=True)[:5]
    print(f"\nüèÜ Top 5 ‡∏ó‡∏µ‡∏° (‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô):")
    for i, (team, stats) in enumerate(top_teams, 1):
        print(f"   {i}. {team}: {stats['points']} ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ({stats['games']} ‡πÄ‡∏Å‡∏°)")

def create_teams_info():
    """‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡∏°"""
    teams_info = [
        {'name': 'Real Madrid', 'short_name': 'RMA', 'founded': 1902, 'venue': 'Santiago Bernab√©u'},
        {'name': 'FC Barcelona', 'short_name': 'BAR', 'founded': 1899, 'venue': 'Camp Nou'},
        {'name': 'Atletico Madrid', 'short_name': 'ATM', 'founded': 1903, 'venue': 'Wanda Metropolitano'},
        {'name': 'Athletic Bilbao', 'short_name': 'ATH', 'founded': 1898, 'venue': 'San Mam√©s'},
        {'name': 'Real Sociedad', 'short_name': 'RSO', 'founded': 1909, 'venue': 'Reale Arena'},
        {'name': 'Real Betis', 'short_name': 'BET', 'founded': 1907, 'venue': 'Benito Villamar√≠n'},
        {'name': 'Villarreal CF', 'short_name': 'VIL', 'founded': 1923, 'venue': 'Estadio de la Cer√°mica'},
        {'name': 'Valencia CF', 'short_name': 'VAL', 'founded': 1919, 'venue': 'Mestalla'},
        {'name': 'Sevilla FC', 'short_name': 'SEV', 'founded': 1890, 'venue': 'Ram√≥n S√°nchez Pizju√°n'},
        {'name': 'RC Celta', 'short_name': 'CEL', 'founded': 1923, 'venue': 'Bala√≠dos'},
        {'name': 'CA Osasuna', 'short_name': 'OSA', 'founded': 1920, 'venue': 'El Sadar'},
        {'name': 'Getafe CF', 'short_name': 'GET', 'founded': 1946, 'venue': 'Coliseum Alfonso P√©rez'},
        {'name': 'UD Las Palmas', 'short_name': 'LPA', 'founded': 1949, 'venue': 'Estadio Gran Canaria'},
        {'name': 'Girona FC', 'short_name': 'GIR', 'founded': 1930, 'venue': 'Estadi Montilivi'},
        {'name': 'Rayo Vallecano', 'short_name': 'RAY', 'founded': 1924, 'venue': 'Campo de F√∫tbol de Vallecas'},
        {'name': 'RCD Espanyol', 'short_name': 'ESP', 'founded': 1900, 'venue': 'RCDE Stadium'},
        {'name': 'Deportivo Alaves', 'short_name': 'ALA', 'founded': 1921, 'venue': 'Mendizorrotza'},
        {'name': 'Real Valladolid', 'short_name': 'VLL', 'founded': 1928, 'venue': 'Jos√© Zorrilla'},
        {'name': 'CD Leganes', 'short_name': 'LEG', 'founded': 1928, 'venue': 'Butarque'},
        {'name': 'RCD Mallorca', 'short_name': 'MLL', 'founded': 1916, 'venue': 'Visit Mallorca Estadi'}
    ]
    
    return pd.DataFrame(teams_info)

def main():
    """‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å"""
    print("üá™üá∏ La Liga Sample Data Creator")
    print("üìä ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á")
    print("=" * 60)
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô
    matches_df = create_realistic_laliga_data()
    
    # ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    analyze_realistic_data(matches_df)
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡∏°
    teams_df = create_teams_info()
    
    # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå
    matches_df.to_csv('laliga_realistic_matches.csv', index=False)
    teams_df.to_csv('laliga_teams_info.csv', index=False)
    
    print(f"\nüíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:")
    print(f"   üìÅ laliga_realistic_matches.csv ({len(matches_df)} ‡πÄ‡∏Å‡∏°)")
    print(f"   üìÅ laliga_teams_info.csv ({len(teams_df)} ‡∏ó‡∏µ‡∏°)")
    
    print(f"\n‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• La Liga ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô!")
    print(f"üéØ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ô‡∏≥‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö La Liga Predictor ‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ")
    print(f"üìù ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏µ‡πâ‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î")
    
    return matches_df, teams_df

if __name__ == "__main__":
    matches, teams = main()
