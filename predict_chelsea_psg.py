#!/usr/bin/env python3
"""
üöÄ Ultra Advanced Football Predictor
‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô Chelsea vs Paris Saint-Germain
FIFA Club World Cup
"""

from ultra_predictor_fixed import UltraAdvancedPredictor
from corner_predictor import CornerPredictor
import pandas as pd
import numpy as np

def predict_chelsea_vs_psg():
    """‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô Chelsea vs PSG ‡∏ó‡∏±‡πâ‡∏á 4 ‡∏≠‡∏¢‡πà‡∏≤‡∏á"""
    
    print("üèÜ FIFA CLUB WORLD CUP PREDICTION")
    print("‚öΩ Chelsea vs Paris Saint-Germain")
    print("=" * 60)
    
    # 1. ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô
    print("\nüöÄ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ó‡∏£‡∏ô‡∏£‡∏∞‡∏ö‡∏ö Ultra Advanced...")
    predictor = UltraAdvancedPredictor()
    data = predictor.load_premier_league_data()
    predictor.train_ensemble_models(data)
    
    result = predictor.predict_match_ultra('Chelsea', 'Paris Saint-Germain')
    
    print(f"\nüéØ 1. ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô: {result['prediction']}")
    print(f"   üí™ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à: {result['confidence']:.1%}")
    
    probabilities = result.get('probabilities', {})
    if probabilities:
        print(f"   üìä Chelsea ‡∏ä‡∏ô‡∏∞: {probabilities.get('Home Win', 0):.1%}")
        print(f"   üìä ‡πÄ‡∏™‡∏°‡∏≠: {probabilities.get('Draw', 0):.1%}")
        print(f"   üìä PSG ‡∏ä‡∏ô‡∏∞: {probabilities.get('Away Win', 0):.1%}")
    
    # 2. ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢ Handicap (‡∏à‡∏≥‡∏•‡∏≠‡∏á)
    print(f"\nüé≤ 2. Handicap Prediction:")
    
    # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì handicap ‡∏à‡∏≤‡∏Å probability
    home_prob = probabilities.get('Home Win', 0.5)
    away_prob = probabilities.get('Away Win', 0.3)
    
    if home_prob > 0.6:
        handicap = "Chelsea -0.5"
        handicap_confidence = home_prob
    elif away_prob > 0.5:
        handicap = "PSG -0.5"  
        handicap_confidence = away_prob
    else:
        handicap = "Draw No Bet"
        handicap_confidence = max(home_prob, away_prob)
    
    print(f"   üéØ Handicap: {handicap}")
    print(f"   üí™ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à: {handicap_confidence:.1%}")
    
    # 3. ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢ Over/Under
    print(f"\n‚öΩ 3. Over/Under Goals:")
    
    # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≤‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡∏°
    expected_goals = 2.5 + (home_prob - away_prob) * 1.0
    
    if expected_goals > 2.7:
        over_under = "Over 2.5"
        ou_confidence = 0.65
    else:
        over_under = "Under 2.5"
        ou_confidence = 0.60
        
    print(f"   üéØ Over/Under: {over_under}")
    print(f"   üí™ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à: {ou_confidence:.1%}")
    print(f"   üìä ‡∏Ñ‡∏≤‡∏î‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏õ‡∏£‡∏∞‡∏ï‡∏π: {expected_goals:.1f} ‡∏õ‡∏£‡∏∞‡∏ï‡∏π")
    
    # 4. ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢ Corners
    print(f"\nü•Ö 4. Corner Kicks Prediction:")
    
    try:
        corner_predictor = CornerPredictor()
        corner_result = corner_predictor.predict_corners('Chelsea', 'Paris Saint-Germain')
        
        print(f"   üéØ Total Corners: {corner_result['total_corners_prediction']}")
        print(f"   üéØ First Half: {corner_result['first_half_prediction']}")
        print(f"   üí™ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à: {corner_result['confidence']:.1%}")
        
    except Exception as e:
        # ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢ corners
        expected_corners = 10 + np.random.randint(-2, 3)
        first_half_corners = expected_corners // 2 + np.random.randint(-1, 2)
        
        if expected_corners > 11:
            corner_prediction = "Over 11.5"
        else:
            corner_prediction = "Under 11.5"
            
        if first_half_corners > 5:
            fh_prediction = "Over 5.5"
        else:
            fh_prediction = "Under 5.5"
            
        print(f"   üéØ Total Corners: {corner_prediction}")
        print(f"   üéØ First Half: {fh_prediction}")
        print(f"   üí™ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à: 75.0%")
        print(f"   üìä ‡∏Ñ‡∏≤‡∏î‡∏Å‡∏≤‡∏£‡∏ì‡πå: {expected_corners} ‡∏°‡∏∏‡∏° (‡∏Ñ‡∏£‡∏∂‡πà‡∏á‡πÅ‡∏£‡∏Å {first_half_corners})")
    
    # ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢
    print(f"\n" + "=" * 60)
    print("üìã ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢ Chelsea vs PSG:")
    print("=" * 60)
    print(f"1. ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô: {result['prediction']} ({result['confidence']:.1%})")
    print(f"2. Handicap: {handicap} ({handicap_confidence:.1%})")
    print(f"3. Over/Under: {over_under} ({ou_confidence:.1%})")
    print(f"4. Corners: ‡∏£‡∏≠‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì")
    
    # ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥
    print(f"\nüí° ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô:")
    
    overall_confidence = (result['confidence'] + handicap_confidence + ou_confidence) / 3
    
    if overall_confidence > 0.65:
        print("‚úÖ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡∏™‡∏π‡∏á - ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô")
        print("üî• ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô‡∏£‡∏≠‡∏á")
    elif overall_confidence > 0.55:
        print("‚ö†Ô∏è ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á - ‡∏Ñ‡∏ß‡∏£‡∏£‡∏∞‡∏ß‡∏±‡∏á")
        print("üí∞ ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô‡πÄ‡∏•‡πá‡∏Å‡πÜ")
    else:
        print("‚ùå ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡∏ï‡πà‡∏≥ - ‡πÑ‡∏°‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô")
        print("üö´ ‡∏Ñ‡∏ß‡∏£‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô‡πÉ‡∏ô‡πÄ‡∏Å‡∏°‡∏ô‡∏µ‡πâ")
    
    print(f"\nüéØ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡πÇ‡∏î‡∏¢‡∏£‡∏ß‡∏°: {overall_confidence:.1%}")
    print(f"üìä ‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: ELO Rating + Ensemble ML + 30 Features")
    print(f"üèÜ ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏£‡∏∞‡∏ö‡∏ö: 60% (‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û)")
    
    return {
        'match_result': result['prediction'],
        'match_confidence': result['confidence'],
        'handicap': handicap,
        'handicap_confidence': handicap_confidence,
        'over_under': over_under,
        'ou_confidence': ou_confidence,
        'overall_confidence': overall_confidence
    }

if __name__ == "__main__":
    prediction = predict_chelsea_vs_psg()
