#!/usr/bin/env python3
"""
üöÄ Fix Head to Head Data Correctly - July 17-18, 2025
‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• head to head ‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
"""

import json
import os

def fix_head_to_head_data():
    """‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• head to head ‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á"""
    print("üöÄ Fix Head to Head Data Correctly - July 17-18, 2025")
    print("=" * 60)
    
    # ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå
    try:
        with open('uefa_competitions_real_data_analysis_with_score_fixed.json', 'r', encoding='utf-8') as f:
            data = json.load(f)
        
        # ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• head to head ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Ilves vs Shakhtar Donetsk
        for match in data['europa_league']:
            if match['home_team'] == 'Ilves' and match['away_team'] == 'Shakhtar Donetsk':
                print(f"‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• head to head ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏π‡πà {match['home_team']} vs {match['away_team']}...")
                print(f"  ‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: {match['head_to_head']}")
                
                # ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• head to head
                match['head_to_head'] = {
                    'matches_count': 1,
                    'home_wins': 0,
                    'away_wins': 1,
                    'draws': 0,
                    'goals_avg': 6.0,
                    'both_teams_scored_rate': 0.0,
                    'over_2_5_rate': 1.0
                }
                
                print(f"  ‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: {match['head_to_head']}")
        
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• head to head ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏π‡πà‡∏≠‡∏∑‡πà‡∏ô‡πÜ
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏π‡πà‡πÉ‡∏ô‡∏ó‡∏±‡πâ‡∏á Europa League ‡πÅ‡∏•‡∏∞ Conference League
        for league in ['europa_league', 'conference_league']:
            for match in data[league]:
                h2h = match['head_to_head']
                
                # ‡∏ñ‡πâ‡∏≤ matches_count ‡πÄ‡∏õ‡πá‡∏ô 0 ‡πÅ‡∏ï‡πà‡∏°‡∏µ home_wins, away_wins, ‡∏´‡∏£‡∏∑‡∏≠ draws ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà 0
                if h2h['matches_count'] == 0 and (h2h['home_wins'] > 0 or h2h['away_wins'] > 0 or h2h['draws'] > 0):
                    print(f"‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏™‡∏≠‡∏î‡∏Ñ‡∏•‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÉ‡∏ô‡∏Ñ‡∏π‡πà {match['home_team']} vs {match['away_team']}...")
                    print(f"  ‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: {h2h}")
                    
                    # ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ matches_count ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö‡∏ú‡∏•‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á home_wins, away_wins, ‡πÅ‡∏•‡∏∞ draws
                    h2h['matches_count'] = h2h['home_wins'] + h2h['away_wins'] + h2h['draws']
                    
                    print(f"  ‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: {h2h}")
        
        # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß
        with open('uefa_competitions_real_data_analysis_with_score_correct.json', 'w', encoding='utf-8') as f:
            json.dump(data, f, ensure_ascii=False, indent=2)
        
        print(f"\nüíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå: uefa_competitions_real_data_analysis_with_score_correct.json")
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")

if __name__ == "__main__":
    fix_head_to_head_data()
