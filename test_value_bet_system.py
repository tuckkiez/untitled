#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üß™ Test Value Bet System
‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå Value Bet
"""

import pandas as pd
import numpy as np
from ultra_predictor_with_odds import UltraAdvancedPredictorWithOdds
import json
from datetime import datetime

def test_value_bet_system():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö Value Bet"""
    
    print("üß™ Testing Ultra Advanced Predictor with Value Bet Analysis")
    print("=" * 70)
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á predictor
    predictor = UltraAdvancedPredictorWithOdds()
    
    # ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö - ‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏û
    test_matches = [
        {
            'home_team': '‡∏ã‡∏µ‡πÄ‡∏≠ ‡∏≠‡∏±‡∏•‡πÑ‡∏î‡∏£‡∏µ‡πà',
            'away_team': '‡πÄ‡∏ã‡πá‡∏ô‡∏ó‡∏£‡∏±‡∏• ‡∏Ñ‡∏≠‡∏£‡πå‡πÇ‡∏î‡∏ö‡∏≤ ‡πÄ‡∏≠‡∏™‡∏î‡∏µ‡∏≠‡∏µ',
            'datetime': '12 ‡∏Å.‡∏Ñ. 01:30',
            'odds_data': {
                'odds_1x2': {
                    'home': 2.13,
                    'draw': 3.00,
                    'away': 2.53
                },
                'handicap_odds': {
                    'line': '0',
                    'home': 1.78,
                    'away': 2.09
                },
                'over_under_odds': {
                    'line': '2.5',
                    'over': 1.99,
                    'under': 1.89
                }
            }
        }
    ]
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô
    total_value_bets = 0
    high_confidence_bets = 0
    
    for i, match in enumerate(test_matches, 1):
        print(f"\nüèÜ ‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô {i}: {match['home_team']} vs {match['away_team']}")
        print(f"‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤: {match['datetime']}")
        print("-" * 50)
        
        # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏Ñ‡∏≤‡∏à‡∏£‡∏¥‡∏á
        predictor.add_real_odds(
            match['home_team'],
            match['away_team'],
            match['odds_data']
        )
        
        # ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå Value Bet
        result = predictor.predict_match_with_odds(
            match['home_team'],
            match['away_team']
        )
        
        # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢
        print(f"üìä ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢: {result['prediction']} (‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à {result['confidence']:.1%})")
        
        if 'win_probabilities' in result:
            probs = result['win_probabilities']
            print(f"   ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô: ‡πÄ‡∏à‡πâ‡∏≤‡∏ö‡πâ‡∏≤‡∏ô {probs['home']:.1%} | "
                  f"‡πÄ‡∏™‡∏°‡∏≠ {probs['draw']:.1%} | ‡∏ó‡∏µ‡∏°‡πÄ‡∏¢‡∏∑‡∏≠‡∏ô {probs['away']:.1%}")
        
        # ‡πÅ‡∏™‡∏î‡∏á Value Bets
        if 'value_bets' in result and result['value_bets']:
            print(f"\nüî• Value Bets ‡∏û‡∏ö: {len(result['value_bets'])} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
            
            for j, bet in enumerate(result['value_bets'], 1):
                print(f"   {j}. {bet['type']}: {bet['outcome']}")
                print(f"      üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤: {bet['odds']:.2f}")
                print(f"      üìä ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤: {bet['our_probability']:.1%}")
                print(f"      üìà Edge: {bet['edge']:+.1%}")
                print(f"      üí° Expected Value: {bet['expected_value']:+.1%}")
                print(f"      üéØ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à: {bet['confidence']}")
                print(f"      üé≤ Kelly Fraction: {bet['kelly_fraction']:.3f}")
                print()
                
                total_value_bets += 1
                if bet['confidence'] == 'HIGH':
                    high_confidence_bets += 1
        else:
            print("\n‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Value Bet")
        
        # ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥
        if 'betting_recommendation' in result:
            rec = result['betting_recommendation']
            print(f"üí° ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥: {rec['action']}")
            
            if rec['action'] == 'BET':
                print(f"   ‚úÖ ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô: {rec['recommended_bet']['outcome']}")
                print(f"   üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤: {rec['recommended_bet']['odds']:.2f}")
                print(f"   üìà Edge: {rec['recommended_bet']['edge']:+.1%}")
            elif rec['action'] == 'CONSIDER':
                print(f"   ‚ö†Ô∏è  ‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤: {rec['recommended_bet']['outcome']}")
                print(f"   üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤: {rec['recommended_bet']['odds']:.2f}")
                print(f"   ‚ö†Ô∏è  {rec.get('warning', '')}")
            else:
                print(f"   ‚ùå ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•: {rec.get('reason', 'No value found')}")
        
        # ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏ï‡∏•‡∏≤‡∏î
        if 'market_efficiency' in result:
            eff = result['market_efficiency']
            print(f"\nüìä ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏ï‡∏•‡∏≤‡∏î: {eff['efficiency']}")
            print(f"   üìà ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢: {eff['average_difference']:.1%}")
            print(f"   üí° {eff['interpretation']}")
    
    # ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
    print("\n" + "=" * 70)
    print("üìà ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö")
    print("=" * 70)
    
    print(f"üèÜ ‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {len(test_matches)}")
    print(f"üî• Value Bets ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {total_value_bets}")
    print(f"‚≠ê ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡∏™‡∏π‡∏á: {high_confidence_bets}")
    
    if len(test_matches) > 0:
        value_bet_rate = (total_value_bets / (len(test_matches) * 4)) * 100  # 4 = ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢
        print(f"üìä ‡∏≠‡∏±‡∏ï‡∏£‡∏≤ Value Bet: {value_bet_rate:.1f}%")
        
        if high_confidence_bets > 0:
            print(f"‚úÖ ‡∏°‡∏µ Value Bet ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡∏™‡∏π‡∏á: {high_confidence_bets} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
        else:
            print("‚ö†Ô∏è  ‡πÑ‡∏°‡πà‡∏°‡∏µ Value Bet ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡∏™‡∏π‡∏á")
    
    print("\nüéØ ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏£‡∏∞‡∏ö‡∏ö:")
    
    if total_value_bets > 0:
        print("‚úÖ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥ - ‡∏û‡∏ö Value Bet")
        if high_confidence_bets > 0:
            print("üî• ‡∏°‡∏µ Value Bet ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á")
        else:
            print("‚ö†Ô∏è  Value Bet ‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á")
    else:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Value Bet - ‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ï‡∏•‡∏≤‡∏î‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á")
    
    print("\nüí° ‡∏Ç‡πâ‡∏≠‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:")
    print("   1. ‡πÉ‡∏ä‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ä‡πà‡∏ß‡∏¢‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à")
    print("   2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô‡∏à‡∏£‡∏¥‡∏á")
    print("   3. ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏∏‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏°‡∏±‡∏î‡∏£‡∏∞‡∏ß‡∏±‡∏á")
    print("   4. ‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏£‡∏∞‡∏ö‡∏ö")

def test_odds_calculation():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡πÅ‡∏•‡∏∞ Value Bet"""
    
    print("\nüßÆ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì Value Bet")
    print("=" * 50)
    
    predictor = UltraAdvancedPredictorWithOdds()
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì
    test_cases = [
        {'our_prob': 0.60, 'odds': 1.89, 'expected_edge': 0.071},  # Under 2.5 ‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á
        {'our_prob': 0.45, 'odds': 2.13, 'expected_edge': -0.019}, # Home Win ‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á
        {'our_prob': 0.70, 'odds': 2.00, 'expected_edge': 0.20},   # Value Bet ‡∏ó‡∏µ‡πà‡∏î‡∏µ
        {'our_prob': 0.30, 'odds': 2.00, 'expected_edge': -0.20},  # No Value
    ]
    
    for i, case in enumerate(test_cases, 1):
        result = predictor.calculate_value_bet(case['our_prob'], case['odds'])
        
        print(f"\nTest Case {i}:")
        print(f"   ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤: {case['our_prob']:.1%}")
        print(f"   ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡∏û‡∏ô‡∏±‡∏ô: {case['odds']:.2f}")
        print(f"   Edge ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÑ‡∏î‡πâ: {result['edge']:+.1%}")
        print(f"   Edge ‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î: {case['expected_edge']:+.1%}")
        print(f"   Expected Value: {result['expected_value']:+.3f}")
        print(f"   Kelly Fraction: {result['kelly_fraction']:.3f}")
        print(f"   Value Bet: {'‚úÖ' if result['is_value_bet'] else '‚ùå'}")
        
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
        edge_diff = abs(result['edge'] - case['expected_edge'])
        if edge_diff < 0.01:  # ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 1%
            print(f"   ‚úÖ ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
        else:
            print(f"   ‚ùå ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î (‡∏ï‡πà‡∏≤‡∏á {edge_diff:.3f})")

def main():
    """‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å"""
    test_value_bet_system()
    test_odds_calculation()
    
    print("\n" + "=" * 70)
    print("üöÄ Ultra Advanced Football Predictor")
    print("üí° ‡∏£‡∏∞‡∏ö‡∏ö‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå Value Bet ‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß!")
    print("‚öΩ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á")

if __name__ == "__main__":
    main()
