#!/usr/bin/env python3
"""
üöÄ Fix Head to Head Data - July 17-18, 2025
‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• head to head ‡πÇ‡∏î‡∏¢‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏ö‡πÅ‡∏•‡πâ‡∏ß
"""

import json
import os
import glob

def fix_head_to_head_data():
    """‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• head to head"""
    print("üöÄ Fix Head to Head Data - July 17-18, 2025")
    print("=" * 60)
    
    # ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå
    try:
        with open('uefa_competitions_real_data_analysis_with_score_improved.json', 'r', encoding='utf-8') as f:
            data = json.load(f)
        
        # ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• head to head ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Europa League
        for match in data['europa_league']:
            home_team = match['home_team']
            away_team = match['away_team']
            print(f"‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• head to head ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏π‡πà {home_team} vs {away_team}...")
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• head to head
            h2h = match['head_to_head']
            if h2h['matches_count'] > 0:
                print(f"  ‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: {h2h}")
                
                # ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• head to head
                h2h['matches_count'] = max(0, h2h['matches_count'] - 1)
                
                # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏à‡∏≠‡∏Å‡∏±‡∏ô‡∏à‡∏£‡∏¥‡∏á‡πÜ ‡πÉ‡∏´‡πâ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                if h2h['matches_count'] == 0:
                    h2h['home_wins'] = 0
                    h2h['away_wins'] = 0
                    h2h['draws'] = 0
                    h2h['goals_avg'] = 0
                    h2h['both_teams_scored_rate'] = 0
                    h2h['over_2_5_rate'] = 0
                
                print(f"  ‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: {h2h}")
        
        # ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• head to head ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Conference League
        for match in data['conference_league']:
            home_team = match['home_team']
            away_team = match['away_team']
            print(f"‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• head to head ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏π‡πà {home_team} vs {away_team}...")
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• head to head
            h2h = match['head_to_head']
            if h2h['matches_count'] > 0:
                print(f"  ‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: {h2h}")
                
                # ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• head to head
                h2h['matches_count'] = max(0, h2h['matches_count'] - 1)
                
                # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏à‡∏≠‡∏Å‡∏±‡∏ô‡∏à‡∏£‡∏¥‡∏á‡πÜ ‡πÉ‡∏´‡πâ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                if h2h['matches_count'] == 0:
                    h2h['home_wins'] = 0
                    h2h['away_wins'] = 0
                    h2h['draws'] = 0
                    h2h['goals_avg'] = 0
                    h2h['both_teams_scored_rate'] = 0
                    h2h['over_2_5_rate'] = 0
                
                print(f"  ‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: {h2h}")
        
        # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß
        with open('uefa_competitions_real_data_analysis_with_score_fixed.json', 'w', encoding='utf-8') as f:
            json.dump(data, f, ensure_ascii=False, indent=2)
        
        print(f"\nüíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå: uefa_competitions_real_data_analysis_with_score_fixed.json")
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")

if __name__ == "__main__":
    fix_head_to_head_data()
