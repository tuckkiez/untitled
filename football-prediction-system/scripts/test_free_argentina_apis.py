#!/usr/bin/env python3
"""
Test Free APIs for Argentina Primera Division Data
‡∏ó‡∏î‡∏™‡∏≠‡∏ö Free APIs ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ü‡∏∏‡∏ï‡∏ö‡∏≠‡∏•‡∏≠‡∏≤‡∏£‡πå‡πÄ‡∏à‡∏ô‡∏ï‡∏¥‡∏ô‡πà‡∏≤
"""

import requests
import json
from datetime import datetime, timedelta

def test_thesportsdb():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö TheSportsDB API"""
    print("üîç Testing TheSportsDB for Argentina data...")
    
    try:
        # ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏•‡∏µ‡∏Å‡∏≠‡∏≤‡∏£‡πå‡πÄ‡∏à‡∏ô‡∏ï‡∏¥‡∏ô‡πà‡∏≤
        url = "https://www.thesportsdb.com/api/v1/json/3/search_all_leagues.php"
        params = {'c': 'Argentina'}
        
        response = requests.get(url, params=params)
        
        if response.status_code == 200:
            data = response.json()
            leagues = data.get('countries', []) or []
            
            print(f"‚úÖ Found {len(leagues)} Argentina leagues:")
            for league in leagues:
                if league:
                    print(f"   - {league.get('strLeague', 'Unknown')}")
            
            # ‡∏•‡∏≠‡∏á‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏°‡∏ó‡∏ä‡πå
            if leagues:
                league_name = leagues[0].get('strLeague', '')
                print(f"\nüèÜ Looking for matches in {league_name}...")
                
                # ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏°‡∏ó‡∏ä‡πå‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
                match_url = "https://www.thesportsdb.com/api/v1/json/3/eventslast.php"
                match_params = {'id': leagues[0].get('idLeague', '')}
                
                match_response = requests.get(match_url, params=match_params)
                if match_response.status_code == 200:
                    match_data = match_response.json()
                    events = match_data.get('results', []) or []
                    
                    print(f"‚úÖ Found {len(events)} recent matches")
                    for i, event in enumerate(events[:3]):  # ‡πÅ‡∏™‡∏î‡∏á 3 ‡πÅ‡∏°‡∏ó‡∏ä‡πå‡πÅ‡∏£‡∏Å
                        if event:
                            print(f"   {i+1}. {event.get('strHomeTeam')} vs {event.get('strAwayTeam')}")
                            print(f"      Score: {event.get('intHomeScore', '?')}-{event.get('intAwayScore', '?')}")
                            print(f"      Date: {event.get('dateEvent')}")
            
            return leagues
        else:
            print(f"‚ùå Error: {response.status_code}")
            return []
            
    except Exception as e:
        print(f"‚ùå Error: {e}")
        return []

def test_football_api_free():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö Football API ‡∏ü‡∏£‡∏µ"""
    print("\nüîç Testing Football API (Free)...")
    
    # ‡∏•‡∏≠‡∏á API ‡∏ü‡∏£‡∏µ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á key
    free_apis = [
        "https://api.football-data-api.com/league-list",
        "https://free-football-soccer-videos.p.rapidapi.com/",
        "http://api.cup2018.ir/api/v1/match"
    ]
    
    for api_url in free_apis:
        try:
            print(f"üì° Testing: {api_url}")
            response = requests.get(api_url, timeout=10)
            
            if response.status_code == 200:
                print(f"‚úÖ Success: {response.status_code}")
                try:
                    data = response.json()
                    print(f"   Data type: {type(data)}")
                    if isinstance(data, dict):
                        print(f"   Keys: {list(data.keys())[:5]}")
                    elif isinstance(data, list):
                        print(f"   Items: {len(data)}")
                except:
                    print(f"   Content length: {len(response.text)}")
            else:
                print(f"‚ùå Failed: {response.status_code}")
                
        except Exception as e:
            print(f"‚ùå Error: {e}")

def check_live_score_apis():
    """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Live Score APIs"""
    print("\nüîç Testing Live Score APIs...")
    
    live_apis = [
        {
            'name': 'LiveScore API',
            'url': 'https://livescore-api.com/api-client/scores/live.json',
            'method': 'GET'
        },
        {
            'name': 'Football Data',
            'url': 'https://api.openligadb.de/getmatchdata/bl1/2024',
            'method': 'GET'
        }
    ]
    
    for api in live_apis:
        try:
            print(f"üì° Testing {api['name']}...")
            response = requests.get(api['url'], timeout=10)
            
            if response.status_code == 200:
                print(f"‚úÖ {api['name']}: Success")
                try:
                    data = response.json()
                    print(f"   Data received: {len(str(data))} chars")
                except:
                    print(f"   Text data: {len(response.text)} chars")
            else:
                print(f"‚ùå {api['name']}: Status {response.status_code}")
                
        except Exception as e:
            print(f"‚ùå {api['name']}: {e}")

def search_argentina_specific():
    """‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≤‡∏£‡πå‡πÄ‡∏à‡∏ô‡∏ï‡∏¥‡∏ô‡πà‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞"""
    print("\nüá¶üá∑ Searching Argentina-specific data...")
    
    try:
        # ‡∏•‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ó‡∏µ‡∏°‡∏≠‡∏≤‡∏£‡πå‡πÄ‡∏à‡∏ô‡∏ï‡∏¥‡∏ô‡πà‡∏≤
        teams_url = "https://www.thesportsdb.com/api/v1/json/3/search_all_teams.php"
        params = {'l': 'Argentine Primera Divisi√≥n'}
        
        response = requests.get(teams_url, params=params)
        
        if response.status_code == 200:
            data = response.json()
            teams = data.get('teams', []) or []
            
            print(f"‚úÖ Found {len(teams)} teams in Argentine Primera Divisi√≥n:")
            for i, team in enumerate(teams[:10]):  # ‡πÅ‡∏™‡∏î‡∏á 10 ‡∏ó‡∏µ‡∏°‡πÅ‡∏£‡∏Å
                if team:
                    print(f"   {i+1}. {team.get('strTeam', 'Unknown')}")
                    print(f"      Stadium: {team.get('strStadium', 'Unknown')}")
            
            # ‡∏ñ‡πâ‡∏≤‡∏´‡∏≤‡∏ó‡∏µ‡∏°‡πÄ‡∏à‡∏≠ ‡∏•‡∏≠‡∏á‡∏´‡∏≤‡πÅ‡∏°‡∏ó‡∏ä‡πå‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡∏°‡πÅ‡∏£‡∏Å
            if teams:
                team_id = teams[0].get('idTeam')
                print(f"\nüèÜ Looking for matches of {teams[0].get('strTeam')}...")
                
                match_url = "https://www.thesportsdb.com/api/v1/json/3/eventslast.php"
                match_params = {'id': team_id}
                
                match_response = requests.get(match_url, params=match_params)
                if match_response.status_code == 200:
                    match_data = match_response.json()
                    events = match_data.get('results', []) or []
                    
                    print(f"‚úÖ Found {len(events)} recent matches:")
                    for i, event in enumerate(events[:5]):
                        if event:
                            print(f"   {i+1}. {event.get('strHomeTeam')} vs {event.get('strAwayTeam')}")
                            print(f"      Score: {event.get('intHomeScore', '?')}-{event.get('intAwayScore', '?')}")
                            print(f"      Date: {event.get('dateEvent')}")
                            
                            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
                            if event.get('intHomeScore') and event.get('intAwayScore'):
                                total_goals = int(event.get('intHomeScore', 0)) + int(event.get('intAwayScore', 0))
                                print(f"      Total Goals: {total_goals}")
            
            return teams
        else:
            print(f"‚ùå Error: {response.status_code}")
            return []
            
    except Exception as e:
        print(f"‚ùå Error: {e}")
        return []

def main():
    print("üá¶üá∑ Free Argentina Football API Tester")
    print("=" * 50)
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö APIs ‡∏ï‡πà‡∏≤‡∏á‡πÜ
    thesportsdb_leagues = test_thesportsdb()
    test_football_api_free()
    check_live_score_apis()
    argentina_teams = search_argentina_specific()
    
    print("\nüìã Summary:")
    print(f"- TheSportsDB leagues: {len(thesportsdb_leagues)}")
    print(f"- Argentina teams found: {len(argentina_teams) if argentina_teams else 0}")
    
    if argentina_teams:
        print("\n‚úÖ SUCCESS: Found Argentina Primera Divisi√≥n data!")
        print("üìä Available data:")
        print("   - Team information")
        print("   - Recent match results")
        print("   - Scores and dates")
        print("\nüöÄ Next step: Create Argentina predictor with real data")
    else:
        print("\n‚ùå No comprehensive Argentina data found in free APIs")
        print("üí° Recommendation: Need paid API for complete data")

if __name__ == "__main__":
    main()
