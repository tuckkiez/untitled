#!/usr/bin/env python3
"""
üîç ‡∏ó‡∏î‡∏™‡∏≠‡∏ö RapidAPI Football API ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• corners
"""

import requests
import json

def test_rapidapi_corners():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö RapidAPI Football API"""
    print("üîç ‡∏ó‡∏î‡∏™‡∏≠‡∏ö RapidAPI Football API")
    print("=" * 50)
    
    # API Configuration
    url = 'https://api-football-v1.p.rapidapi.com/v2/odds/league/865927/bookmaker/5?page=2'
    headers = {
        'x-rapidapi-host': 'api-football-v1.p.rapidapi.com',
        'x-rapidapi-key': 'f9cf9a3854mshf30572945114fb4p105c26jsnbbc82dcea9c0'
    }
    
    print(f"üì° URL: {url}")
    print(f"üîë API Key: {headers['x-rapidapi-key'][:20]}...")
    
    try:
        print(f"\nüöÄ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API...")
        response = requests.get(url, headers=headers, timeout=30)
        
        print(f"üìä Response Status: {response.status_code}")
        print(f"üìÑ Response Headers: {dict(response.headers)}")
        
        if response.status_code == 200:
            try:
                data = response.json()
                print(f"‚úÖ API ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ!")
                print(f"üìä Response Type: {type(data)}")
                
                if isinstance(data, dict):
                    print(f"üîë Keys: {list(data.keys())}")
                    
                    # ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
                    print(f"\nüìã ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:")
                    print(json.dumps(data, indent=2, ensure_ascii=False)[:1000] + "...")
                    
                elif isinstance(data, list):
                    print(f"üìä ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£: {len(data)}")
                    if len(data) > 0:
                        print(f"üìã ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏£‡∏Å:")
                        print(json.dumps(data[0], indent=2, ensure_ascii=False)[:500] + "...")
                
                return data
                
            except json.JSONDecodeError as e:
                print(f"‚ùå JSON Decode Error: {e}")
                print(f"üìÑ Raw Response: {response.text[:500]}")
                return None
                
        elif response.status_code == 401:
            print(f"‚ùå Unauthorized - API Key ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏")
            return None
            
        elif response.status_code == 403:
            print(f"‚ùå Forbidden - ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á endpoint ‡∏ô‡∏µ‡πâ")
            return None
            
        elif response.status_code == 429:
            print(f"‚ùå Rate Limit Exceeded - ‡πÄ‡∏Å‡∏¥‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï")
            return None
            
        else:
            print(f"‚ùå API Error: {response.status_code}")
            print(f"üìÑ Response: {response.text[:500]}")
            return None
            
    except requests.exceptions.Timeout:
        print(f"‚è∞ Timeout - API ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏≤‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ")
        return None
        
    except requests.exceptions.ConnectionError:
        print(f"üåê Connection Error - ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ")
        return None
        
    except Exception as e:
        print(f"‚ùå Unexpected Error: {e}")
        return None

def explore_api_endpoints():
    """‡∏™‡∏≥‡∏£‡∏ß‡∏à endpoints ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• corners"""
    print(f"\nüîç ‡∏™‡∏≥‡∏£‡∏ß‡∏à API Endpoints ‡∏≠‡∏∑‡πà‡∏ô‡πÜ")
    print("=" * 40)
    
    base_url = 'https://api-football-v1.p.rapidapi.com'
    headers = {
        'x-rapidapi-host': 'api-football-v1.p.rapidapi.com',
        'x-rapidapi-key': 'f9cf9a3854mshf30572945114fb4p105c26jsnbbc82dcea9c0'
    }
    
    # ‡∏•‡∏≠‡∏á endpoints ‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• corners
    test_endpoints = [
        '/v2/fixtures/league/39',  # Premier League fixtures
        '/v2/statistics/fixture/592872',  # Match statistics
        '/v2/leagues',  # Available leagues
        '/v3/fixtures',  # V3 fixtures
    ]
    
    for endpoint in test_endpoints:
        print(f"\nüì° ‡∏ó‡∏î‡∏™‡∏≠‡∏ö: {endpoint}")
        try:
            url = base_url + endpoint
            response = requests.get(url, headers=headers, timeout=10)
            print(f"   Status: {response.status_code}")
            
            if response.status_code == 200:
                try:
                    data = response.json()
                    if isinstance(data, dict):
                        print(f"   Keys: {list(data.keys())[:5]}")
                    elif isinstance(data, list):
                        print(f"   Items: {len(data)}")
                except:
                    print(f"   Response: {response.text[:100]}...")
            else:
                print(f"   Error: {response.text[:100]}")
                
        except Exception as e:
            print(f"   Exception: {e}")

def check_api_documentation():
    """‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö API"""
    print(f"\nüìö ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• RapidAPI Football API")
    print("=" * 40)
    
    print(f"üîó API: api-football-v1.p.rapidapi.com")
    print(f"üìã Features ‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à:")
    print(f"   - Match fixtures ‡πÅ‡∏•‡∏∞‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô")
    print(f"   - Team ‡πÅ‡∏•‡∏∞ player statistics")
    print(f"   - Live scores")
    print(f"   - Odds ‡πÅ‡∏•‡∏∞ betting data")
    print(f"   - Match events (goals, cards, corners)")
    
    print(f"\nüéØ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Corners ‡∏Ñ‡∏ß‡∏£‡∏´‡∏≤:")
    print(f"   - Match statistics endpoint")
    print(f"   - Match events endpoint")
    print(f"   - Live match data")

def main():
    """‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å"""
    print("üöÄ RapidAPI Football API Tester")
    print("ü•Ö ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Corners")
    print("=" * 60)
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API ‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏°‡∏≤
    data = test_rapidapi_corners()
    
    # ‡∏™‡∏≥‡∏£‡∏ß‡∏à endpoints ‡∏≠‡∏∑‡πà‡∏ô
    explore_api_endpoints()
    
    # ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• API
    check_api_documentation()
    
    print(f"\nüéØ ‡∏™‡∏£‡∏∏‡∏õ:")
    print("=" * 20)
    
    if data is not None:
        print("‚úÖ API Key ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ")
        print("‚úÖ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ RapidAPI ‡πÑ‡∏î‡πâ")
        print("üîç ‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏≤ endpoint ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• corners")
    else:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ")
        print("üîß ‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö API Key ‡∏´‡∏£‡∏∑‡∏≠ endpoint")
    
    return data

if __name__ == "__main__":
    result = main()
